import Application from '@ember/application';
import ApplicationInstance from '@ember/application/instance';

import { initialize } from '<%= dasherizedModulePrefix %>/instance-initializers/<%= dasherizedModuleName %>';
import { suite, test } from 'qunit-decorators';
import { EmberTest } from 'ember-qunit-decorators/test-support';
<% if (destroyAppExists) { %>import destroyApp from '../../helpers/destroy-app';<% } else { %>import { run } from '@ember/runloop';<% } %>

@suite('<%= friendlyTestName %>')
export class <%= testClassName %>InstanceInitializerTest extends EmberTest {
<% if (isTyped) {%>
  private TestApplication!: typeof Application;
  private application!: Application;
  private instance!: ApplicationInstance;<% } %>

  beforeEach() {
    this.TestApplication = Application.extend();
    this.TestApplication.instanceInitializer({
      name: 'initializer under test',
      initialize
    });
    this.application = this.TestApplication.create({ autoboot: false });
    this.instance = this.application.buildInstance();
  }
  afterEach() {
    <% if (destroyAppExists) { %>destroyApp(this.application);<% } else { %>run(this.application, 'destroy');<% } %>
    <% if (destroyAppExists) { %>destroyApp(this.instance);<% } else { %>run(this.instance, 'destroy');<% } %>
  }

  // Replace this with your real tests.
  @test('it works')
  async itWorks(assert<% if (isTyped) {%>: Assert<% } %>) {
    await this.instance.boot();

    assert.ok(true);
  }
}
